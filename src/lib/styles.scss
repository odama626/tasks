@import './reset.scss';
@import './theme.scss';

html {
	@include computePalette(295, primary);
	@include computePalette(174, accent);
	@include computePalette(30, error);

	@include selectPalette(primary);
	min-height: 100dvh;

	--block-spacing: 0.5rem;
	line-height: 1.5;
}

body {
	min-height: 100dvh;
	box-sizing: border-box;
	margin: 0;
}

.accent {
	@include selectPalette(accent);
}

.error,
label[aria-invalid='true'] {
	@include selectPalette(error);
}

html {
	background: var(--surface-1);
	color: var(--text-1);
	font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu,
		Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

nav > ul {
	list-style-type: none;
	display: flex;
	flex-direction: inherit;
	padding: 0;
	margin: 0;
	gap: var(--block-spacing);
}

input[type='checkbox'] {
	display: none;
}

input,
textarea,
select {
	background-color: transparent;
	border-radius: 4px;
	outline: unset;
	font-size: 1.25rem;
	padding: 0.5rem 0.75rem;
	box-sizing: border-box;
	--border-color: var(--surface-4);

	border: solid 2px var(--border-color);
	background-color: var(--surface-2);
	color: var(--text-1);

	@media only screen and (max-width: 480px) {
		padding: 0.25rem 0.5rem;
		font-size: 1.1rem;
		max-width: 100%;
	}

	&:hover,
	&:focus {
		--border-color: var(--surface-5);
	}

	&:focus {
		outline: solid var(--surface-5);
	}

	&:disabled {
		color: var(--text-3);
	}

	&.ghost {
		border-width: 0;
		border-radius: 0;
		background-color: transparent;
		border-bottom-width: 2px;
		&:focus {
			outline: none;
		}
	}
}

select.ghost {
	border: none;
}

.input-group {
	display: contents;

	@media only screen and (min-width: 481px) {
		display: flex;
		flex-direction: row;
		> *:not(:last-child) {
			&,
			> select {
				border-right: none;
				border-bottom-right-radius: 0;
				border-top-right-radius: 0;
			}
		}

		> *:not(:first-child) {
			&,
			> select {
				border-left: none;
				border-bottom-left-radius: 0;
				border-top-left-radius: 0;
			}
		}
	}
}

label {
	display: block;
	margin-bottom: 0.75rem;
	// color: var(--text-3);
}

input,
textarea {
	&:focus {
		outline: solid var(--surface-5);
	}
}

.divider {
	border: 0.5px solid var(--surface-4);
	&.vertical {
		height: 1rem;
		margin: auto;
	}
	&.horizontal {
		width: 100%;
		margin: var(--block-spacing) 0;
	}
}

mark {
	background-color: var(--text-3);
	color: var(--surface-2);
}

a {
	color: var(--text-3);
	text-decoration: none;
	overflow-wrap: break-word;
	word-break: break-all;

	&[href*="//"]
	{
		box-shadow: 0px 1px 0px var(--text-3);
		line-height: 1.4;
	}
	&:hover {
		cursor: pointer;
	}
}

button,
a.button {
	all: unset;
	--background-color: var(--surface-3);
	padding: 0.75rem 1rem;
	cursor: pointer;
	border-radius: 4px;
	background-color: var(--background-color);
	text-decoration: none;
	display: block;
	--outline-color: var(--surface-6);

	@media only screen and (max-width: 480px) {
		padding: 0.25rem 0.5rem;
	}

	&:visited {
		color: inherit;
	}

	&:hover {
		--background-color: var(--surface-4);
	}

	&:active {
		--background-color: var(--surface-3);
	}

	&:focus {
		outline: solid var(--outline-color);
		outline-offset: 2px;
	}

	&:disabled {
		--background-color: var(--surface-disabled) !important;
		--outline-color: var(--surface-disabled);
	}
}

// button.icon {
// 	padding: 0.25rem 0.5rem;
// }

button,
.button {
	&.ghost,
	&.outline {
		--background-color: var(--text-3);
		color: var(--background-color);
		background-color: transparent;

		&:visited {
			color: var(--background-color);
		}

		&:hover {
			--background-color: var(--text-4);
		}
	}
	&.outline {
		// border-radius: 8px;
		background-color: var(--surface-2);
		border: 1px solid var(--background-color);
	}

	&[aria-expanded='true'] {
		background-color: var(--surface-3);
		color: var(--text-1);
	}

	&.small {
		padding: 0.15rem 0.5rem;
	}
}

svg.icon {
	width: 24px;
	height: 24px;
	flex-shrink: 0;

	&.button {
		cursor: pointer;
		color: var(--text-4);
		&:hover {
			color: var(--text-3);
		}
	}
}

.modal {
	background: var(--surface-2);
	padding: 2rem;
	border-radius: 4px;
	display: inline-block;
	position: fixed;
	min-width: 270px;

	@media only screen and (max-width: 480px) {
		padding: 1.5rem;
	}
}

.modal-shade {
	position: fixed;
	display: flex;
	align-items: center;
	justify-content: center;
	inset: 0;
	backdrop-filter: blur(5px);
	z-index: 20;
}

form,
.form {
	display: flex;
	flex-direction: column;
	align-items: stretch;
	gap: var(--block-spacing);
}

label {
	display: flex;
	flex-direction: column;
	align-items: stretch;
	> input:not(:first-child) {
		margin-top: calc(var(--block-spacing) / 2);
		width: 100%;
	}
}

small {
	color: var(--text-3);
}

.flex-align {
	display: flex;
	align-items: center;
	gap: 1ch;
}

@media only screen and (max-width: 480px) {
	html {
		font-size: 1.25rem;
	}
}

strong {
	font-weight: 600;
}

h1 {
	font-size: 2.25rem;
	margin-bottom: 1.25rem;
}

h2 {
	font-size: 1.5rem;
	color: var(--text-3);
}
h3 {
	font-size: 1.75rem;
}
h4 {
	font-size: 1.5rem;
}
h5 {
	font-size: 1.25rem;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	margin-bottom: 0.75rem;
}

blockquote {
	border-left: 2px solid var(--text-4);
	padding-left: 1rem;
}

em {
	font-style: italic;
}

.editor ul,
.editor ol {
	margin-left: 1rem;
	li::marker {
		color: var(--text-3);
	}
	li {
		margin: var(--block-spacing);
	}
}

.editor {
	ul {
		list-style: disc;
		ul {
			list-style: circle;
			ul {
				list-style: square;
			}
		}
	}
}

ul[data-type='taskList'] {
	list-style: none;
	margin-left: 0;
	> li {
		display: flex;
		align-items: start;
		gap: 8px;
		margin: 8px 0;

		> label {
			display: inline-block;
		}

		// > label + * {
		// margin-top: 4px;
		// }
	}
}

ol {
	list-style: decimal;
	ol {
		list-style: upper-alpha;
		ol {
			list-style: upper-roman;
			ol {
				list-style: lower-alpha;
				ol {
					list-style: lower-roman;
				}
			}
		}
	}
}

@keyframes loading-shimmer {
	0% {
		background-position: -1000px 0;
	}
	100% {
		background-position: 1000px 0;
	}
}

.loading {
	*:empty {
		animation: loading-shimmer 2s infinite;
		background: linear-gradient(
			to right,
			var(--surface-2) 4%,
			var(--surface-1) 25%,
			var(--surface-2) 36%
		);
		background-size: 1000px 100%;
		min-height: 1ch;
		border-radius: 50px;
	}

	@for $i from 1 through 10 {
		:nth-child(#{$i}) {
			animation-delay: $i * 20ms;
		}
	}

	h2 {
		width: 10ch;
		height: 2rem;
	}
	p {
		height: 0.75rem;
		margin: var(--block-spacing) 0;
		width: 60%;
		&:first-child {
			width: 90%;
		}
		&:nth-child(2n) {
			width: 70%;
		}
		&:nth-child(3n) {
			width: 75%;
		}
		&:nth-child(4n) {
			width: 85%;
		}
	}
}

@media only screen and (max-width: 480px) {
	[data-format='desktop'] {
		&,
		* {
			display: none;
		}
	}
}

@media only screen and (min-width: 481px) {
	[data-format='mobile'] {
		&,
		* {
			display: none;
		}
	}
}

.subheader {
	margin-bottom: 0.75rem;
}

.popper-menu {
	position: relative;
}

.popper-menu-items {
	position: absolute;
	z-index: 10;
}

.header-portal-items {
	display: flex;
	align-items: center;
}
